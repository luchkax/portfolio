<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAtDm9Lv403kW35Ki8tKVntzuZKqsiRzb0&libraries=places&callback=initialize" async defer></script>

@model wedding_planner.Models.EventViewModel
@{
    ViewData["Title"] = "New";
}
@Html.Partial("navbarPartial")
<div class="container">
    <div class="row">
        <div class="col-md-5 col-sm-5 col-sm-offset-1 col-md-offest-1">
            <form asp-controller="Home" asp-action="CreateEvent" method="post">
                <label asp-for="WedderOne"></label>
                <input class="form-control" asp-for="WedderOne">
                <label asp-for="WedderTwo"></label>
                <input class="form-control" asp-for="WedderTwo">
                <label asp-for="Event_Date"></label>
                <input class="form-control" asp-for="Event_Date" type="date">
                <label asp-for="Address"></label>
                <input id="autocomplete" onFocus="geolocate()" class="form-control" asp-for="Address" placeholder="Google Search">
                <br>
                <input class="btn btn-primary" type="submit" value="Create">
            </form>
        </div>
        <div class="col-md-5 col-sm-5">
            <div id="map"></div>
        </div>
    </div>
</div>
<script>
    var placeSearch, autocomplete;
    var init = true;
    var map;
    function initAutocomplete() {
    // Create the autocomplete object, restricting the search to geographical
    // location types.
        autocomplete = new google.maps.places.Autocomplete(
            (document.getElementById('autocomplete')),
            {types: ['geocode']});
            // When the user selects an address from the dropdown, populate the address
            // fields in the form.
            autocomplete.addListener('place_changed', function(){
                if(init == false){
                    console.log('inside if statement')
                    var geocoder = new google.maps.Geocoder();
                    geocodeAddress(geocoder, map);
                }
            });
        init = false;
    }
    // Bias the autocomplete object to the user's geographical location,
    // as supplied by the browser's 'navigator.geolocation' object.
    function geolocate() {
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function(position) {
            var geolocation = {
                lat: position.coords.latitude,
                lng: position.coords.longitude
            };
            var circle = new google.maps.Circle({
                center: geolocation,
                radius: position.coords.accuracy
            });
            autocomplete.setBounds(circle.getBounds());
            });
        }
    }
    
    function initMap() {
        console.log("inside initMap")
        map = new google.maps.Map(document.getElementById('map'), {
            zoom: 15,
            center: {lat: 41.878, lng: -87.629}
            });
    }

    function geocodeAddress(geocoder, resultsMap) {
        var address = document.getElementById('autocomplete').value;
        geocoder.geocode({'address': address}, function(results, status) {
            if (status === 'OK') {
            resultsMap.setCenter(results[0].geometry.location);
            var marker = new google.maps.Marker({
                map: resultsMap,
                position: results[0].geometry.location
            });
            } else {
            alert('Geocode was not successful for the following reason: ' + status);
            }
        });
    }

    function initialize() {
        initMap();
        initAutocomplete();
    }
</script>